services:
  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: brainlens-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: brainlens
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - brainlens-network

<<<<<<< HEAD
=======
  

>>>>>>> origin/main
  # Ollama (LLaMA en Docker)
  ollama:
    image: ollama/ollama:0.11.8
    container_name: brainlens-ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_CONTEXT_LENGTH=2048
      - OLLAMA_NUM_PARALLEL=1
    networks:
      - brainlens-network

  # Auth Service
  auth-service:
    build: ./services/auth-service
    container_name: brainlens-auth-service
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://admin:password@mongodb:27017
      - DATABASE_NAME=brainlens
      - HOST=0.0.0.0
      - PORT=8001
      - DEBUG=true
    ports:
      - "8001:8001"
    depends_on:
      - mongodb
    networks:
      - brainlens-network

  # Image Service
  image-service:
    build: ./services/image-service
    container_name: brainlens-image-service
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://admin:password@mongodb:27017
      - DATABASE_NAME=brainlens
      - STORAGE_TYPE=local
      - LOCAL_STORAGE_PATH=/app/storage
<<<<<<< HEAD
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
=======
>>>>>>> origin/main
      # VLM: usar modelo disponible
      - VLM_PROVIDER=bedrock
      - BEDROCK_MODEL_ID=amazon.nova-lite-v1:0
      - AWS_REGION=eu-north-1
      - AWS_DEFAULT_REGION=eu-north-1
      # Credenciales AWS (tomadas del entorno host)
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - OLLAMA_BASE_URL=http://ollama:11434
      - VLM_SYSTEM_PROMPT=Eres un asistente médico especializado en análisis de imágenes radiológicas. Tu función es analizar imágenes médicas y proporcionar observaciones detalladas sobre lo que ves en la imagen, incluyendo posibles hallazgos, anomalías o características relevantes. Responde SIEMPRE en español de forma clara y profesional. Puedes describir lo que observas en la imagen y proporcionar información educativa sobre los hallazgos.
      - VLM_VALIDATOR_SYSTEM_PROMPT=Eres un validador médico especializado. Tu única función es responder SÍ o NO a preguntas simples sobre imágenes médicas. Responde siempre de forma clara y directa.
      - VLM_FORCE_SPANISH=true
      - VLM_TIMEOUT=300
      - COLAB_SERVICE_URL=http://colab-service:8004
      - HOST=0.0.0.0
      - PORT=8002
      - DEBUG=true
    ports:
      - "8002:8002"
    volumes:
      - image_storage:/app/storage
    depends_on:
      - mongodb
<<<<<<< HEAD
      - kafka
=======
>>>>>>> origin/main
      - ollama
      - colab-service
    networks:
      - brainlens-network
<<<<<<< HEAD
=======
    env_file:
      - .env
>>>>>>> origin/main

  # Annotation Service
  annotation-service:
    build: ./services/annotation-service
    container_name: brainlens-annotation-service
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://admin:password@mongodb:27017
      - DATABASE_NAME=brainlens
      - HOST=0.0.0.0
      - PORT=8003
      - DEBUG=true
    ports:
      - "8003:8003"
    depends_on:
      - mongodb
    networks:
      - brainlens-network

  # Colab Service
  colab-service:
    build: ./services/colab-service
    container_name: brainlens-colab-service
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://admin:password@mongodb:27017
      - DATABASE_NAME=brainlens
      - HOST=0.0.0.0
      - PORT=8004
      - DEBUG=true
    volumes:
      - ./modelo_multiclase:/app/modelo_multiclase
    ports:
      - "8004:8004"
    depends_on:
      - mongodb
    networks:
      - brainlens-network

  # Frontend Service
  frontend-service:
    build: ./services/frontend-service
    container_name: brainlens-frontend-service
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - auth-service
    networks:
      - brainlens-network

  # Zookeeper para Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: brainlens-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - brainlens-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: brainlens-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - brainlens-network

  # Workers Kafka
  worker-validate-upload:
    build: ./services/image-service
    container_name: brainlens-worker-validate-upload
    command: python -m tasks.worker_validate_upload
    depends_on:
      - kafka
      - mongodb
      - ollama
      - colab-service
    environment:
      - MONGODB_URL=mongodb://admin:password@mongodb:27017/brainlens?authSource=admin
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - VLM_PROVIDER=ollama
      - VLM_MODEL=llava:7b
      - OLLAMA_BASE_URL=http://ollama:11434
      - VLM_SYSTEM_PROMPT=Eres un validador médico especializado. Tu única función es determinar si una imagen es una tomografía computarizada (CT) del cerebro. Responde ÚNICAMENTE con "SÍ" si es una CT cerebral válida o "NO" si no lo es, seguido de una breve explicación técnica.
      - VLM_VALIDATOR_SYSTEM_PROMPT=Analiza esta imagen médica y determina si es una tomografía computarizada del cerebro. Considera 1) Estructura anatómica cerebral visible, 2) Características típicas de CT (escala de grises Hounsfield), 3) Orientación axial/coronal/sagital típica. Responde solo SÍ o NO.
      - VLM_FORCE_SPANISH=true
      - VLM_TIMEOUT=120
      - COLAB_SERVICE_URL=http://colab-service:8004
      - DEBUG=true
    volumes:
      - image_storage:/app/storage
    networks:
      - brainlens-network
    restart: unless-stopped

  worker-tumor-analysis:
    build: ./services/image-service
    container_name: brainlens-worker-tumor-analysis
    command: python -m tasks.worker_tumor_analysis
    depends_on:
      - kafka
      - mongodb
      - colab-service
    environment:
      - MONGODB_URL=mongodb://admin:password@mongodb:27017/brainlens?authSource=admin
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - COLAB_SERVICE_URL=http://colab-service:8004
      - DEBUG=true
    volumes:
      - image_storage:/app/storage
    networks:
      - brainlens-network
    restart: unless-stopped

  worker-image-chat:
    build: ./services/image-service
    container_name: brainlens-worker-image-chat
    command: python -m tasks.worker_image_chat
    depends_on:
      - kafka
      - mongodb
      - ollama
    environment:
      - MONGODB_URL=mongodb://admin:password@mongodb:27017/brainlens?authSource=admin
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - VLM_PROVIDER=ollama
      - VLM_MODEL=llava:7b
      - OLLAMA_BASE_URL=http://ollama:11434
      - VLM_SYSTEM_PROMPT=Eres un asistente médico especializado en análisis de imágenes cerebrales. Ayuda a interpretar tomografías y resonancias del cerebro de manera clara y educativa.
      - VLM_FORCE_SPANISH=true
      - VLM_TIMEOUT=120
      - DEBUG=true
    volumes:
      - image_storage:/app/storage
    networks:
      - brainlens-network
    restart: unless-stopped

volumes:
  mongodb_data:
    driver: local
  image_storage:
    driver: local
  
  ollama_data:
    driver: local

networks:
  brainlens-network:
    driver: bridge
