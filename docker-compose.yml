services:
  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: brainlens-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: brainlens
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - brainlens-network

  # Redis para Celery
  redis:
    image: redis:7-alpine
    container_name: brainlens-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - brainlens-network

  # Ollama (LLaMA en Docker)
  ollama:
    image: ollama/ollama:0.11.8
    container_name: brainlens-ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - brainlens-network

  # Auth Service
  auth-service:
    build: ./services/auth-service
    container_name: brainlens-auth-service
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://admin:password@mongodb:27017
      - DATABASE_NAME=brainlens
      - HOST=0.0.0.0
      - PORT=8001
      - DEBUG=true
    ports:
      - "8001:8001"
    depends_on:
      - mongodb
    networks:
      - brainlens-network

  # Image Service
  image-service:
    build: ./services/image-service
    container_name: brainlens-image-service
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://admin:password@mongodb:27017
      - DATABASE_NAME=brainlens
      - STORAGE_TYPE=local
      - LOCAL_STORAGE_PATH=/app/storage
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      # VLM: usar modelo disponible
      - VLM_PROVIDER=ollama
      - VLM_MODEL=llava:7b
      - OLLAMA_BASE_URL=http://ollama:11434
      - VLM_SYSTEM_PROMPT=Eres un asistente médico especializado en análisis de imágenes radiológicas. Tu función es analizar imágenes médicas y proporcionar observaciones detalladas sobre lo que ves en la imagen, incluyendo posibles hallazgos, anomalías o características relevantes. Responde SIEMPRE en español de forma clara y profesional. Puedes describir lo que observas en la imagen y proporcionar información educativa sobre los hallazgos.
      - VLM_VALIDATOR_SYSTEM_PROMPT=Eres un validador médico especializado. Tu única función es responder SÍ o NO a preguntas simples sobre imágenes médicas. Responde siempre de forma clara y directa.
      - VLM_FORCE_SPANISH=true
      - VLM_TIMEOUT=120
      - HOST=0.0.0.0
      - PORT=8002
      - DEBUG=true
    ports:
      - "8002:8002"
    volumes:
      - image_storage:/app/storage
    depends_on:
      - mongodb
      - redis
      - ollama
    networks:
      - brainlens-network

  # Celery Worker para Image Service
  image-service-worker:
    build: ./services/image-service
    container_name: brainlens-image-worker
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://admin:password@mongodb:27017
      - DATABASE_NAME=brainlens
      - MODEL_PATH=/app/modelo_multiclase_final.keras
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CELERY_WORKER_CONCURRENCY=2
      - CELERY_TASK_TIME_LIMIT=300
    volumes:
      - image_storage:/app/storage
    depends_on:
      - mongodb
      - redis
    networks:
      - brainlens-network
    command: ["python", "/app/start_celery_worker.py"]

  # Flower para monitoreo de Celery
  flower:
    build: ./services/image-service
    container_name: brainlens-flower
    restart: unless-stopped
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    ports:
      - "5555:5555"
    volumes:
      - ./services/image-service:/app
    depends_on:
      - redis
      - image-service-worker
    networks:
      - brainlens-network
    command: ["celery", "flower", "--port=5555", "--broker=redis://redis:6379/0"]
    working_dir: /app

  # Annotation Service
  annotation-service:
    build: ./services/annotation-service
    container_name: brainlens-annotation-service
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://admin:password@mongodb:27017
      - DATABASE_NAME=brainlens
      - HOST=0.0.0.0
      - PORT=8003
      - DEBUG=true
    ports:
      - "8003:8003"
    depends_on:
      - mongodb
    networks:
      - brainlens-network

  # Colab Service
  colab-service:
    build: ./services/colab-service
    container_name: brainlens-colab-service
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://admin:password@mongodb:27017
      - DATABASE_NAME=brainlens
      - HOST=0.0.0.0
      - PORT=8004
      - DEBUG=true
    ports:
      - "8004:8004"
    depends_on:
      - mongodb
    networks:
      - brainlens-network

  # Frontend Service
  frontend-service:
    build: ./services/frontend-service
    container_name: brainlens-frontend-service
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - auth-service
    networks:
      - brainlens-network

volumes:
  mongodb_data:
    driver: local
  image_storage:
    driver: local
  redis_data:
    driver: local
  ollama_data:
    driver: local

networks:
  brainlens-network:
    driver: bridge
