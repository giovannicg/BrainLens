name: Build and Push to ECR

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: eu-north-1

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ vars.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set ECR registry environment variable
      run: |
        echo "ECR_REGISTRY=${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Build and push Auth Service
    - name: Build and push Auth Service
      uses: docker/build-push-action@v5
      with:
        context: ./services/auth-service
        file: ./services/auth-service/Dockerfile
        push: true
        tags: |
          ${{ env.ECR_REGISTRY }}/brainlens-auth:latest
          ${{ env.ECR_REGISTRY }}/brainlens-auth:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Build and push Image Service
    - name: Build and push Image Service
      uses: docker/build-push-action@v5
      with:
        context: ./services/image-service
        file: ./services/image-service/Dockerfile
        push: true
        tags: |
          ${{ env.ECR_REGISTRY }}/brainlens-image:latest
          ${{ env.ECR_REGISTRY }}/brainlens-image:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Build and push Annotation Service
    - name: Build and push Annotation Service
      uses: docker/build-push-action@v5
      with:
        context: ./services/annotation-service
        file: ./services/annotation-service/Dockerfile
        push: true
        tags: |
          ${{ env.ECR_REGISTRY }}/brainlens-annotation:latest
          ${{ env.ECR_REGISTRY }}/brainlens-annotation:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Build and push Colab Service
    - name: Build and push Colab Service
      uses: docker/build-push-action@v5
      with:
        context: ./services/colab-service
        file: ./services/colab-service/Dockerfile
        push: true
        tags: |
          ${{ env.ECR_REGISTRY }}/brainlens-colab:latest
          ${{ env.ECR_REGISTRY }}/brainlens-colab:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Build and push Frontend Service
    - name: Build and push Frontend Service
      uses: docker/build-push-action@v5
      with:
        context: ./services/frontend-service
        file: ./services/frontend-service/Dockerfile
        push: true
        tags: |
          ${{ env.ECR_REGISTRY }}/brainlens-frontend:latest
          ${{ env.ECR_REGISTRY }}/brainlens-frontend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Verify ECR images
      run: |
        echo "üîç Verifying ECR images..."
        aws ecr describe-images --repository-name brainlens-auth --region ${{ env.AWS_REGION }} --image-ids imageTag=latest
        aws ecr describe-images --repository-name brainlens-image --region ${{ env.AWS_REGION }} --image-ids imageTag=latest
        aws ecr describe-images --repository-name brainlens-annotation --region ${{ env.AWS_REGION }} --image-ids imageTag=latest
        aws ecr describe-images --repository-name brainlens-colab --region ${{ env.AWS_REGION }} --image-ids imageTag=latest
        aws ecr describe-images --repository-name brainlens-frontend --region ${{ env.AWS_REGION }} --image-ids imageTag=latest
        echo "‚úÖ All images successfully pushed to ECR"

    - name: Build summary
      run: |
        echo "üöÄ Build Summary:"
        echo "=================="
        echo "‚úÖ Auth Service: ${{ env.ECR_REGISTRY }}/brainlens-auth:latest"
        echo "‚úÖ Image Service: ${{ env.ECR_REGISTRY }}/brainlens-image:latest"
        echo "‚úÖ Annotation Service: ${{ env.ECR_REGISTRY }}/brainlens-annotation:latest"
        echo "‚úÖ Colab Service: ${{ env.ECR_REGISTRY }}/brainlens-colab:latest"
        echo "‚úÖ Frontend Service: ${{ env.ECR_REGISTRY }}/brainlens-frontend:latest"
        echo ""
        echo "üìã Next: Deployment to EKS will be triggered automatically"
        echo "üîó Commit SHA: ${{ github.sha }}"