#!/usr/bin/env python3
"""
Script para configurar la integraci√≥n con Google Colab
"""

import os
import json
import requests
from datetime import datetime

def setup_colab_integration():
    """Configurar la integraci√≥n con Colab"""
    
    print("üöÄ CONFIGURACI√ìN DE INTEGRACI√ìN CON COLAB")
    print("=" * 50)
    
    # Configuraci√≥n del servicio Colab
    colab_config = {
        "notebook_url": input("üìù URL del notebook de Colab: ").strip(),
        "google_drive_folder_id": input("üìÅ ID de la carpeta de Google Drive (opcional): ").strip() or None,
        "api_key": input("üîë API Key (opcional): ").strip() or None
    }
    
    # Configurar el servicio
    print("\nüîß Configurando servicio de Colab...")
    
    try:
        response = requests.post(
            "http://localhost:8004/configure",
            json=colab_config,
            timeout=10
        )
        
        if response.status_code == 200:
            print("‚úÖ Servicio de Colab configurado exitosamente")
        else:
            print(f"‚ùå Error configurando servicio: {response.status_code}")
            print(f"   Respuesta: {response.text}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå No se pudo conectar al servicio de Colab")
        print("   Aseg√∫rate de que el servicio est√© ejecut√°ndose en el puerto 8004")
    except Exception as e:
        print(f"‚ùå Error: {e}")
    
    # Crear archivo de configuraci√≥n
    config_file = "colab_config.json"
    with open(config_file, 'w') as f:
        json.dump({
            "colab_config": colab_config,
            "timestamp": datetime.utcnow().isoformat(),
            "instructions": {
                "notebook_setup": [
                    "1. Abre el notebook de Colab",
                    "2. Ejecuta todas las celdas en orden",
                    "3. Sube tu modelo a Google Drive",
                    "4. El servidor API estar√° disponible en el puerto 8080"
                ],
                "integration_methods": [
                    "Opci√≥n 1: Google Drive - Sube im√°genes a Drive y el notebook las procesa",
                    "Opci√≥n 2: API Directa - Env√≠a im√°genes directamente al notebook"
                ]
            }
        }, f, indent=2)
    
    print(f"\nüíæ Configuraci√≥n guardada en: {config_file}")
    
    # Mostrar instrucciones
    print("\nüìã INSTRUCCIONES:")
    print("1. Abre el notebook de Colab proporcionado")
    print("2. Ejecuta todas las celdas en orden")
    print("3. Sube tu modelo 'modelo_multiclase_final.keras' a Google Drive")
    print("4. El notebook estar√° listo para procesar im√°genes")
    print("5. Tu aplicaci√≥n Docker puede enviar im√°genes al servicio de Colab")
    
    return colab_config

def test_colab_connection():
    """Probar la conexi√≥n con el servicio de Colab"""
    
    print("\nüß™ PROBANDO CONEXI√ìN CON COLAB")
    print("=" * 30)
    
    try:
        # Probar health check
        response = requests.get("http://localhost:8004/health", timeout=5)
        
        if response.status_code == 200:
            print("‚úÖ Servicio de Colab est√° funcionando")
            
            # Probar status
            status_response = requests.get("http://localhost:8004/status", timeout=5)
            
            if status_response.status_code == 200:
                status_data = status_response.json()
                print(f"üìä Estado: {status_data['status']}")
                print(f"üîß Colab configurado: {status_data['colab_configured']}")
            else:
                print("‚ö†Ô∏è No se pudo obtener el estado del servicio")
                
        else:
            print(f"‚ùå Servicio no responde correctamente: {response.status_code}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå No se pudo conectar al servicio de Colab")
        print("   Ejecuta: docker-compose up colab-service")
    except Exception as e:
        print(f"‚ùå Error: {e}")

def main():
    """Funci√≥n principal"""
    
    print("üß† BrainLens - Configuraci√≥n de Integraci√≥n con Colab")
    print("=" * 60)
    
    # Verificar si el servicio est√° ejecut√°ndose
    test_colab_connection()
    
    # Configurar integraci√≥n
    config = setup_colab_integration()
    
    # Probar conexi√≥n nuevamente
    test_colab_connection()
    
    print("\nüéâ CONFIGURACI√ìN COMPLETADA")
    print("=" * 30)
    print("Tu aplicaci√≥n ahora puede usar Google Colab para procesar im√°genes.")
    print("El servicio de Colab est√° disponible en: http://localhost:8004")

if __name__ == "__main__":
    main() 